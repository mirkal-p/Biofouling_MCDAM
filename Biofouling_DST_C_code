//Auto-generated C code from HUGIN 8800 (double precision, table generator: true)
//when function returns, verify that HUGIN objects was successfully created by asserting (h_error_code() == h_error_none)

# include "hugin.h"
# include <string.h>

h_class_collection_t create_class_collection() {
    //define
    h_class_collection_t cc;
    h_class_t cls_COMPLETE_DST_Final;
    h_node_t node_buffer[4];
    h_table_t t;
    h_number_t* d;
    size_t i, j;
    h_model_t model;
    h_expression_t expr;
    h_node_t node_COMPLETE_DST_Final_D4;
    h_node_t node_COMPLETE_DST_Final_U9;
    h_node_t node_COMPLETE_DST_Final_C17;
    h_node_t node_COMPLETE_DST_Final_C16;
    h_node_t node_COMPLETE_DST_Final_C1;
    h_node_t node_COMPLETE_DST_Final_U8;
    h_node_t node_COMPLETE_DST_Final_D2;
    h_node_t node_COMPLETE_DST_Final_C21;
    h_node_t node_COMPLETE_DST_Final_C19;
    h_node_t node_COMPLETE_DST_Final_U7;
    h_node_t node_COMPLETE_DST_Final_C18;
    h_node_t node_COMPLETE_DST_Final_C14;
    h_node_t node_COMPLETE_DST_Final_C13;
    h_node_t node_COMPLETE_DST_Final_Routes;
    h_node_t node_COMPLETE_DST_Final_C10;
    h_node_t node_COMPLETE_DST_Final_C6;
    h_node_t node_COMPLETE_DST_Final_D1;
    h_node_t node_COMPLETE_DST_Final_C9;
    h_node_t node_COMPLETE_DST_Final_U6;
    h_node_t node_COMPLETE_DST_Final_U5;
    h_node_t node_COMPLETE_DST_Final_C3;
    h_node_t node_COMPLETE_DST_Final_C8;
    h_node_t node_COMPLETE_DST_Final_C4;
    h_node_t node_COMPLETE_DST_Final_D7;
    h_node_t node_COMPLETE_DST_Final_D6;
    h_node_t node_COMPLETE_DST_Final_C12;
    h_node_t node_COMPLETE_DST_Final_U4;
    h_node_t node_COMPLETE_DST_Final_C20;
    h_node_t node_COMPLETE_DST_Final_D3;
    h_node_t node_COMPLETE_DST_Final_C11;
    h_node_t node_COMPLETE_DST_Final_U3;
    h_node_t node_COMPLETE_DST_Final_U2;
    h_node_t node_COMPLETE_DST_Final_U1;
    h_node_t node_COMPLETE_DST_Final_C5;

    //string constants
    const char* s[136] = {"D4", "U9", "C17", "C16", "C1", "U8", "D2", "C21", "C19", "U7", "C18", "C14", "C13", "Routes", "C10", "C6", "D1", "C9", "U6", "U5", "C3", "C8", "C4", "D7", "D6", "C12", "U4", "C20", "D3", "C11", "U3", "U2", "U1", "C5", "None", "1 day", "2 days", "hard coating", "biocidal coating", "Fouling release", "Soft fouling", "Hard fouling", "Route 1A", "Route 1B", "Route 2A", "Route 2B", "Route 3A", "Route 3B", "Route 4A", "Route 4B", "Route 5A", "Route 5B", "Route 6A", "Route 6B", "Route 7A", "Route 7B", "Route 8A", "Route 8B", "Route 9A", "Route 9B", "Route 10A", "Route 10B", "In-water cleaning + no collecting", "In-water cleaning + collecting", "No in-water cleaning", "Soft brushes", "Hard brushes", "low", "high", "light fuel oil", "heavy fuel oil", "Bulker", "Container", "General Cargo", "Passenger", "RoRo", "Tanker", "-C20*D2", "-C11*0.5*D2", "-C11*0.35*D2", "0", "365*7*(C8*1E+010)/1E+009", "(2*7*12*(C8*1E+010)+(365-2*7)*7*(C8*1E+010))/1E+009", "(6*7*12*(C8*1E+010)+(365-6*7)*7*(C8*1E+010))/1E+009", "(12*7*12*(C8*1E+010)+(365-12*7)*7*(C8*1E+010))/1E+009", "(2*7*25*(C8*1E+010)+(365-2*7)*7*(C8*1E+010))/1E+009", "(6*7*25*(C8*1E+010)+(365-6*7)*7*(C8*1E+010))/1E+009", "(12*7*25*(C8*1E+010)+(365-12*7)*7*(C8*1E+010))/1E+009", "(C8-C8*0.07)*100", "(C8-C8*0.09)*100", "(C8-C8*0.27)*100", "(C8-C8*0.08)*100", "C17*2.6*C10*C3/10", "C17*C19*C3/10", "C8*0.07*100", "C8*0.09*100", "C8*0.27*100", "C8*0.15*100", "C8*0.08*100", "-C8*1E+006*32/5", "-C8*1E+006*22/5", "-C8*1E+006*52/5", "-C8*1E+006*0.4*3*2", "-C8*1E+006*0.4*3*6", "-C8*1E+006*0.4*3*12", "-(C8*1E+006*0.4*3*2+2*20000)", "-(C8*1E+006*0.4*3*6+6*20000)", "-(C8*1E+006*0.4*3*12+12*20000)", "-(C8*1E+006*0.4*3*2+2*40000)", "-(C8*1E+006*0.4*3*6+6*40000)", "-(C8*1E+006*0.4*3*12+12*40000)", "-C8*1E+006*0.4*3*2*1.5", "-C8*1E+006*0.4*3*6*1.5", "-C8*1E+006*0.4*3*12*1.5", "-(C8*1E+006*0.4*3*2*1.5+2*20000)", "-(C8*1E+006*0.4*3*6*1.5+6*20000)", "-(C8*1E+006*0.4*3*12*1.5+12*20000)", "-(C8*1E+006*0.4*3*2*1.5+2*40000)", "-(C8*1E+006*0.4*3*6*1.5+6*40000)", "-(C8*1E+006*0.4*3*12*1.5+12*40000)", "C11*2.7", "C11*3.2", "D7*1.02", "D7*1.04", "D7*1.06", "D7*1.08", "D7*1.12", "D7*1.3", "-(C13*0.9*0.9+C14*0.05)", "-(C13*0.9*0.05*0.9+C14*0.05)", "-(C13+C14)*0.05", "-(C13*0.6*0.08+C14*0.05)", "-(C13*0.6*0.05*0.08+C14*0.05)", "-C11*0.5", "-C11*0.35", "COMPLETE_DST_Final"};

    //some numbers
    static h_number_t arr_0_0[] = {0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
    static h_number_t arr_0_5[] = {0.5,0.5};
    static h_number_t arr_0_3[] = {0.3,0.3,0.3,0.3,0.3,0.3};
    static h_number_t arr_3_92517E__5[] = {3.92517E-5,3.92517E-5,3.92517E-5,3.92517E-5,3.92517E-5,3.92517E-5,3.92517E-5};
    static h_number_t arr_5_88568E__5[] = {5.88568E-5,5.88568E-5,5.88568E-5,5.88568E-5,5.88568E-5,5.88568E-5,5.88568E-5};
    static h_number_t arr_8_82073E__5[] = {8.82073E-5,8.82073E-5,8.82073E-5,8.82073E-5,8.82073E-5,8.82073E-5,8.82073E-5};
    static h_number_t arr_2_14085E__4[] = {2.14085E-4,2.14085E-4};
    static h_number_t arr_1_58873E__4[] = {1.58873E-4,1.58873E-4,1.58873E-4,1.58873E-4,1.58873E-4,1.58873E-4,1.58873E-4};
    static h_number_t arr_1_65322E__4[] = {1.65322E-4,1.65322E-4,1.65322E-4,1.65322E-4,1.65322E-4,1.65322E-4,1.65322E-4};

    if ((cc = h_new_class_collection()) == 0)
        return cc;

    //initialize class COMPLETE_DST_Final
    if ((cls_COMPLETE_DST_Final = h_cc_new_class(cc)) == 0 ||
        h_class_set_name(cls_COMPLETE_DST_Final, (h_string_t)s[135]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_D4 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_D4, (h_string_t)s[0]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_D4, 3) != 0)
        return cc;
    {
        static size_t label[] = {34, 35, 36};
        for (i = 0; i < 3; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_D4, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_U9 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U9, (h_string_t)s[1]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_C17 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C17, (h_string_t)s[2]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C17, 6) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C17, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 100.0};
        for (i = 0; i <= 6; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C17, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C16 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C16, (h_string_t)s[3]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C16, 3) != 0)
        return cc;
    {
        static size_t label[] = {37, 38, 39};
        for (i = 0; i < 3; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_C16, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C1 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C1, (h_string_t)s[4]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C1, 6) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C1, h_subtype_interval) != 0)
        return cc;
    {
        for (i = 0; i <= 6; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C1, i, h_node_get_state_value(node_COMPLETE_DST_Final_C17, i)) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_U8 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U8, (h_string_t)s[5]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_D2 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_D2, (h_string_t)s[6]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_D2, 8) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_D2, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0, 8000.0, 8760.0};
        for (i = 0; i <= 8; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_D2, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C21 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C21, (h_string_t)s[7]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C21, 16) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C21, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 0.0, 25.0, 50.0, 100.0, 200.0, 500.0, 1000.0, 5000.0, 10000.0, 15000.0, 20000.0, 25000.0, 30000.0, 35000.0, 40000.0, 45000.0};
        for (i = 0; i <= 16; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C21, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C19 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C19, (h_string_t)s[8]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C19, 20) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C19, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 5.0, 10.0, 15.0, 20.0, 25.0, 30.0, 35.0, 40.0, 45.0, 50.0, 55.0, 60.0, 65.0, 70.0, 75.0, 80.0, 85.0, 90.0, 95.0, 100.0};
        for (i = 0; i <= 20; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C19, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_U7 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U7, (h_string_t)s[9]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_C18 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C18, (h_string_t)s[10]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C18, 2) != 0)
        return cc;
    {
        static size_t label[] = {40, 41};
        for (i = 0; i < 2; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_C18, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C14 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C14, (h_string_t)s[11]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C14, 14) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C14, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 25.0, 50.0, 100.0, 500.0, 1000.0, 5000.0, 10000.0, 15000.0, 20000.0, 25000.0, 30000.0, 35000.0, 40000.0, 45000.0};
        for (i = 0; i <= 14; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C14, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C13 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C13, (h_string_t)s[12]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C13, 16) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C13, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 25.0, 50.0, 100.0, 500.0, 1000.0, 5000.0, 10000.0, 15000.0, 20000.0, 25000.0, 30000.0, 35000.0, 40000.0, 45000.0, 50000.0, 55000.0};
        for (i = 0; i <= 16; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C13, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_Routes = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_Routes, (h_string_t)s[13]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_Routes, 20) != 0)
        return cc;
    {
        static size_t label[] = {42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61};
        for (i = 0; i < 20; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_Routes, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C10 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C10, (h_string_t)s[14]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C10, 15) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C10, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0, 14.0, 16.0, 18.0, 20.0, 22.0, 24.0, 26.0, 28.0, 30.0};
        for (i = 0; i <= 15; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C10, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C6 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C6, (h_string_t)s[15]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C6, 3) != 0)
        return cc;
    {
        static size_t label[] = {62, 63, 64};
        for (i = 0; i < 3; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_C6, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_D1 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_D1, (h_string_t)s[16]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_D1, 2) != 0)
        return cc;
    {
        static size_t label[] = {65, 66};
        for (i = 0; i < 2; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_D1, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C9 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C9, (h_string_t)s[17]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C9, 2) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C9, h_subtype_number) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 7.0};
        for (i = 0; i < 2; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C9, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_U6 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U6, (h_string_t)s[18]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_U5 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U5, (h_string_t)s[19]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_C3 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C3, (h_string_t)s[20]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C3, 14) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C3, h_subtype_number) != 0)
        return cc;
    {
        static h_number_t value[] = {1.0, 3.0, 7.0, 9.0, 10.0, 15.0, 17.0, 18.0, 30.0, 31.0, 32.0, 33.0, 36.0, 53.0};
        for (i = 0; i < 14; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C3, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C8 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C8, (h_string_t)s[21]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C8, 12) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C8, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 5.0E-4, 0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.1, 0.2, 1.0, 1.04};
        for (i = 0; i <= 12; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C8, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C4 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C4, (h_string_t)s[22]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C4, 2) != 0)
        return cc;
    {
        static size_t label[] = {67, 68};
        for (i = 0; i < 2; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_C4, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_D7 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_D7, (h_string_t)s[23]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_D7, 4) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_D7, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {1000.0, 2000.0, 3000.0, 4000.0, 5000.0};
        for (i = 0; i <= 4; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_D7, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_D6 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_D6, (h_string_t)s[24]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_D6, 2) != 0)
        return cc;
    {
        static size_t label[] = {69, 70};
        for (i = 0; i < 2; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_D6, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C12 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C12, (h_string_t)s[25]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C12, 5) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C12, h_subtype_number) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 1.0, 2.0, 3.0, 4.0};
        for (i = 0; i < 5; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C12, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_U4 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U4, (h_string_t)s[26]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_C20 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C20, (h_string_t)s[27]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C20, 13) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C20, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 8000.0, 10000.0, 12000.0, 14000.0, 16000.0, 18000.0, 20000.0, 22000.0, 24000.0};
        for (i = 0; i <= 13; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C20, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_D3 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_D3, (h_string_t)s[28]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_D3, 6) != 0)
        return cc;
    {
        static size_t label[] = {71, 72, 73, 74, 75, 76};
        for (i = 0; i < 6; ++i) {
            if (h_node_set_state_label(node_COMPLETE_DST_Final_D3, i, (h_string_t)s[label[i]]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_C11 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_chance, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C11, (h_string_t)s[29]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C11, 6) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C11, h_subtype_interval) != 0)
        return cc;
    {
        static h_number_t value[] = {1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0};
        for (i = 0; i <= 6; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C11, i, value[i]) != 0)
                return cc;
        }
    }

    if ((node_COMPLETE_DST_Final_U3 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U3, (h_string_t)s[30]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_U2 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U2, (h_string_t)s[31]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_U1 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_utility, h_kind_other)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_U1, (h_string_t)s[32]) != 0)
        return cc;

    if ((node_COMPLETE_DST_Final_C5 = h_class_new_node(cls_COMPLETE_DST_Final, h_category_decision, h_kind_discrete)) == 0 ||
        h_node_set_name(node_COMPLETE_DST_Final_C5, (h_string_t)s[33]) != 0 ||
        h_node_set_number_of_states(node_COMPLETE_DST_Final_C5, 4) != 0 ||
        h_node_set_subtype(node_COMPLETE_DST_Final_C5, h_subtype_number) != 0)
        return cc;
    {
        static h_number_t value[] = {0.0, 2.0, 6.0, 12.0};
        for (i = 0; i < 4; ++i) {
            if (h_node_set_state_value(node_COMPLETE_DST_Final_C5, i, value[i]) != 0)
                return cc;
        }
    }

    //structure class COMPLETE_DST_Final
    if (h_node_add_parent(node_COMPLETE_DST_Final_U9, node_COMPLETE_DST_Final_D2) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U9, node_COMPLETE_DST_Final_C20) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C17, node_COMPLETE_DST_Final_C16) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C17, node_COMPLETE_DST_Final_C12) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C17, node_COMPLETE_DST_Final_C5) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C16, node_COMPLETE_DST_Final_Routes) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C1, node_COMPLETE_DST_Final_C16) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C1, node_COMPLETE_DST_Final_C12) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C1, node_COMPLETE_DST_Final_C5) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U8, node_COMPLETE_DST_Final_C11) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U8, node_COMPLETE_DST_Final_D6) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U8, node_COMPLETE_DST_Final_D2) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C21, node_COMPLETE_DST_Final_D1) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C21, node_COMPLETE_DST_Final_C5) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C21, node_COMPLETE_DST_Final_C9) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C21, node_COMPLETE_DST_Final_C8) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C19, node_COMPLETE_DST_Final_C8) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C19, node_COMPLETE_DST_Final_D3) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U7, node_COMPLETE_DST_Final_C4) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U7, node_COMPLETE_DST_Final_C16) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C18, node_COMPLETE_DST_Final_C17) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C14, node_COMPLETE_DST_Final_C10) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C14, node_COMPLETE_DST_Final_C3) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C14, node_COMPLETE_DST_Final_C17) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C13, node_COMPLETE_DST_Final_C3) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C13, node_COMPLETE_DST_Final_C19) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C13, node_COMPLETE_DST_Final_C17) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C10, node_COMPLETE_DST_Final_C8) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C10, node_COMPLETE_DST_Final_D3) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C9, node_COMPLETE_DST_Final_C16) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U6, node_COMPLETE_DST_Final_C8) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U6, node_COMPLETE_DST_Final_C16) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U5, node_COMPLETE_DST_Final_C5) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U5, node_COMPLETE_DST_Final_C8) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U5, node_COMPLETE_DST_Final_D4) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U5, node_COMPLETE_DST_Final_C6) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C3, node_COMPLETE_DST_Final_Routes) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C8, node_COMPLETE_DST_Final_D3) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C4, node_COMPLETE_DST_Final_Routes) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U4, node_COMPLETE_DST_Final_C20) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C20, node_COMPLETE_DST_Final_C11) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C20, node_COMPLETE_DST_Final_D6) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C11, node_COMPLETE_DST_Final_D7) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_C11, node_COMPLETE_DST_Final_C1) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U3, node_COMPLETE_DST_Final_C13) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U3, node_COMPLETE_DST_Final_C14) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U3, node_COMPLETE_DST_Final_C6) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U3, node_COMPLETE_DST_Final_C18) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U2, node_COMPLETE_DST_Final_C21) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U1, node_COMPLETE_DST_Final_C11) != 0)
        return cc;
    if (h_node_add_parent(node_COMPLETE_DST_Final_U1, node_COMPLETE_DST_Final_D6) != 0)
        return cc;

    //parameters class COMPLETE_DST_Final

    node_buffer[0] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_U9, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[77], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C17)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {1.0,0.0,1.0,0.7,0.3,0.6,0.4,0.4,0.6};
        memcpy(d+1, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+7, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+13, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+25, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+31, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+42, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+45, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+49, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+60, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+67, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+78, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+85, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+91, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+97, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+103, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+115, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+121, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+131, data, sizeof(h_number_t)*3);
        memcpy(d+134, arr_0_0, sizeof(h_number_t)*4);
        memcpy(d+139, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+150, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+153, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+157, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+168, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+171, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+175, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+181, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+187, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+193, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+199, data+3, sizeof(h_number_t)*2);
        memcpy(d+201, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+205, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+211, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+217, data+5, sizeof(h_number_t)*2);
        memcpy(d+219, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+223, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+229, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+235, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+237, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+241, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+247, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+253, data+7, sizeof(h_number_t)*2);
        memcpy(d+255, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+259, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+265, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+271, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+277, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+283, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+289, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+295, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+301, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+307, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+313, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+319, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+325, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+331, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+337, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+343, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+349, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+355, arr_0_0, sizeof(h_number_t)*5);
    }

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C16)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
        memcpy(d, arr_0_3, sizeof(h_number_t)*6);
        memcpy(d+6, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+8, data, sizeof(h_number_t));
        memcpy(d+9, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+11, data+1, sizeof(h_number_t));
        memcpy(d+12, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+14, data+2, sizeof(h_number_t));
        memcpy(d+15, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+17, data+3, sizeof(h_number_t));
        memcpy(d+18, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+20, data+4, sizeof(h_number_t));
        memcpy(d+21, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+23, data+5, sizeof(h_number_t));
        memcpy(d+24, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+26, data+6, sizeof(h_number_t));
        memcpy(d+27, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+29, data+7, sizeof(h_number_t));
        memcpy(d+30, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+32, data+8, sizeof(h_number_t));
        memcpy(d+33, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+35, data+9, sizeof(h_number_t));
        memcpy(d+36, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+38, data+10, sizeof(h_number_t));
        memcpy(d+39, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+41, data+11, sizeof(h_number_t));
        memcpy(d+42, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+44, data+12, sizeof(h_number_t));
        memcpy(d+45, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+47, data+13, sizeof(h_number_t));
        memcpy(d+48, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+50, data+14, sizeof(h_number_t));
        memcpy(d+51, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+53, data+15, sizeof(h_number_t));
        memcpy(d+54, arr_0_3, sizeof(h_number_t)*6);
    }

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C1)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.7,0.3,0.6,0.4,0.4,0.6};
        memcpy(d+1, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+7, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+13, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+25, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+31, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+41, data, sizeof(h_number_t)*3);
        memcpy(d+44, arr_0_0, sizeof(h_number_t)*4);
        memcpy(d+49, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+60, arr_0_0, sizeof(h_number_t)*4);
        memcpy(d+64, data+3, sizeof(h_number_t)*3);
        memcpy(d+67, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+78, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+85, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+91, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+97, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+103, arr_0_0, sizeof(h_number_t)*8);
        memcpy(d+111, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+113, data+6, sizeof(h_number_t)*2);
        memcpy(d+115, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+121, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+133, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+139, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+149, data+8, sizeof(h_number_t)*3);
        memcpy(d+152, arr_0_0, sizeof(h_number_t)*4);
        memcpy(d+157, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+167, data+11, sizeof(h_number_t)*3);
        memcpy(d+170, arr_0_0, sizeof(h_number_t)*4);
        memcpy(d+175, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+181, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+187, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+193, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+199, data+14, sizeof(h_number_t)*2);
        memcpy(d+201, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+205, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+211, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+217, data+16, sizeof(h_number_t)*2);
        memcpy(d+219, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+223, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+229, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+235, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+237, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+241, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+247, arr_0_0, sizeof(h_number_t)*6);
        memcpy(d+253, data+18, sizeof(h_number_t)*2);
        memcpy(d+255, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+259, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+265, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+271, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+277, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+283, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+289, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+295, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+301, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+307, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+313, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+319, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+325, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+331, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+337, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+343, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+349, arr_0_0, sizeof(h_number_t)*5);
        memcpy(d+355, arr_0_0, sizeof(h_number_t)*5);
    }

    node_buffer[0] = node_COMPLETE_DST_Final_D6;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_U8, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[78], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[79], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;

    node_buffer[0] = node_COMPLETE_DST_Final_D1;
    node_buffer[1] = node_COMPLETE_DST_Final_C9;
    node_buffer[2] = node_COMPLETE_DST_Final_C5;
    node_buffer[3] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C21, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 3, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[81], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 4, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[82], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 5, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[83], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 6, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[84], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 7, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 8, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 9, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 10, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 11, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[81], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 12, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[85], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 13, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[86], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 14, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[87], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 15, expr) != 0)
        return cc;

    node_buffer[0] = node_COMPLETE_DST_Final_D3;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C19, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[88], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[89], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[89], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[90], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 3, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[90], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 4, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[91], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 5, expr) != 0)
        return cc;

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_U7)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {-50.0,-100.0};
        memcpy(d+2, data, sizeof(h_number_t)*2);
    }

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C18)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0};
        memcpy(d, data, sizeof(h_number_t)*6);
        memcpy(d+6, arr_0_5, sizeof(h_number_t)*2);
        memcpy(d+8, data+6, sizeof(h_number_t)*4);
    }

    node_buffer[0] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C14, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[92], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;

    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C13, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[93], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;

    node_buffer[0] = node_COMPLETE_DST_Final_D3;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C10, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[94], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[95], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[95], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[96], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 3, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[97], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 4, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[98], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 5, expr) != 0)
        return cc;

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C9)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {0.0};
        memcpy(d+1, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+5, data, sizeof(h_number_t));
    }

    node_buffer[0] = node_COMPLETE_DST_Final_C16;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_U6, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[99], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[100], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[101], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;

    node_buffer[0] = node_COMPLETE_DST_Final_C6;
    node_buffer[1] = node_COMPLETE_DST_Final_D4;
    node_buffer[2] = node_COMPLETE_DST_Final_C5;
    node_buffer[3] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_U5, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[102], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[103], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[104], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 3, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 4, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[105], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 5, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[106], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 6, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[107], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 7, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 8, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[108], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 9, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[109], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 10, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[110], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 11, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 12, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[111], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 13, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[112], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 14, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[113], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 15, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 16, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[114], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 17, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[115], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 18, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[116], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 19, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 20, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[117], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 21, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[118], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 22, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[119], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 23, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 24, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 25, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 26, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 27, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 28, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 29, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 30, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 31, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 32, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 33, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 34, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[80], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 35, expr) != 0)
        return cc;

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C3)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {1.0,0.0,1.0};
        memcpy(d, arr_0_0, sizeof(h_number_t)*13);
        memcpy(d+14, arr_0_0, sizeof(h_number_t)*9);
        memcpy(d+24, arr_0_0, sizeof(h_number_t)*15);
        memcpy(d+40, arr_0_0, sizeof(h_number_t)*3);
        memcpy(d+44, arr_0_0, sizeof(h_number_t)*24);
        memcpy(d+68, data, sizeof(h_number_t)*3);
        memcpy(d+71, arr_0_0, sizeof(h_number_t)*19);
        memcpy(d+91, arr_0_0, sizeof(h_number_t)*11);
        memcpy(d+103, arr_0_0, sizeof(h_number_t)*15);
        memcpy(d+119, arr_0_0, sizeof(h_number_t)*8);
        memcpy(d+128, arr_0_0, sizeof(h_number_t)*14);
        memcpy(d+143, arr_0_0, sizeof(h_number_t)*16);
        memcpy(d+160, arr_0_0, sizeof(h_number_t)*10);
        memcpy(d+171, arr_0_0, sizeof(h_number_t)*13);
        memcpy(d+185, arr_0_0, sizeof(h_number_t)*18);
        memcpy(d+204, arr_0_0, sizeof(h_number_t)*9);
        memcpy(d+214, arr_0_0, sizeof(h_number_t)*16);
        memcpy(d+231, arr_0_0, sizeof(h_number_t)*11);
        memcpy(d+243, arr_0_0, sizeof(h_number_t)*19);
        memcpy(d+263, arr_0_0, sizeof(h_number_t)*11);
        memcpy(d+275, arr_0_0, sizeof(h_number_t)*5);
    }

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C8)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {1.58873E-4,0.00301329,0.34364,0.403583,0.248493,0.555222,0.370168,0.0740806,0.0106709,0.0319514,0.916743,0.039106,2.14085E-4,3.97537E-4,2.14085E-4,3.06324E-5,3.06324E-5,2.14085E-4,0.112046,0.00610589,0.677391,0.184323,0.0189771,5.09397E-4,0.00286012,0.442681,0.5534,2.74324E-4,0.0560839,0.283236,0.51303,0.131625,0.0154078};
        memcpy(d, data, sizeof(h_number_t)*5);
        memcpy(d+5, arr_1_58873E__4, sizeof(h_number_t)*7);
        memcpy(d+12, arr_5_88568E__5, sizeof(h_number_t)*2);
        memcpy(d+14, data+5, sizeof(h_number_t)*3);
        memcpy(d+17, arr_5_88568E__5, sizeof(h_number_t)*7);
        memcpy(d+24, data+8, sizeof(h_number_t)*8);
        memcpy(d+32, arr_2_14085E__4, sizeof(h_number_t)*2);
        memcpy(d+34, data+16, sizeof(h_number_t)*7);
        memcpy(d+41, arr_1_65322E__4, sizeof(h_number_t)*7);
        memcpy(d+48, data+23, sizeof(h_number_t)*5);
        memcpy(d+53, arr_3_92517E__5, sizeof(h_number_t)*7);
        memcpy(d+60, data+28, sizeof(h_number_t)*5);
        memcpy(d+65, arr_8_82073E__5, sizeof(h_number_t)*7);
    }

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_C4)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0};
        memcpy(d, data, sizeof(h_number_t));
        memcpy(d+3, data+1, sizeof(h_number_t)*4);
        memcpy(d+7, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+11, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+13, data+5, sizeof(h_number_t)*2);
        memcpy(d+17, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+19, data+7, sizeof(h_number_t)*2);
        memcpy(d+23, data+9, sizeof(h_number_t)*6);
        memcpy(d+29, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+33, arr_0_0, sizeof(h_number_t)*2);
        memcpy(d+35, data+15, sizeof(h_number_t)*5);
    }

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_U4)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {-2500.0,-3500.0,-4500.0,-5500.0,-7000.0,-9000.0,-11000.0,-13000.0,-15000.0,-17000.0,-19000.0,-21000.0,-23000.0};
        memcpy(d, data, sizeof(h_number_t)*13);
    }

    node_buffer[0] = node_COMPLETE_DST_Final_D6;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C20, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[120], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[121], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;

    node_buffer[0] = node_COMPLETE_DST_Final_C1;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_C11, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[122], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[123], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[124], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[125], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 3, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[126], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 4, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[127], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 5, expr) != 0)
        return cc;

    node_buffer[0] = node_COMPLETE_DST_Final_C18;
    node_buffer[1] = node_COMPLETE_DST_Final_C6;
    node_buffer[2] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_U3, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[128], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[129], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[130], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 2, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[131], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 3, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[132], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 4, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[130], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 5, expr) != 0)
        return cc;

    if ((t = h_node_get_table(node_COMPLETE_DST_Final_U2)) == 0 || (d = h_table_get_data(t)) == 0)
        return cc;
    {
        static h_number_t data[] = {0.0,-12.5,-37.5,-75.0,-150.0,-350.0,-750.0,-3500.0,-7500.0,-12500.0,-17500.0,-22500.0,-27500.0,-32500.0,-37500.0,42500.0};
        memcpy(d, data, sizeof(h_number_t)*16);
    }

    node_buffer[0] = node_COMPLETE_DST_Final_D6;
    node_buffer[1] = 0;
    if ((model = h_node_new_model(node_COMPLETE_DST_Final_U1, node_buffer)) == 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[133], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 0, expr) != 0)
        return cc;
    if ((expr = h_string_parse_expression((h_string_t)s[134], model, 0, 0)) == 0)
        return cc;
    if (h_model_set_expression(model, 1, expr) != 0)
        return cc;

    return cc;
}

